mutate(block = replace_na(block,'instructions'),
trials_this_n = replace_na(trials_this_n,0)) %>%
mutate(across(average_acceleration_x:timestamp, as.numeric), # coerce eyetracking data to numeric.
across(contains(c('in_saccade','in_blink')), as.logical))
warnings()
any(is.na(raw$average_in_blink))
sum(is.na(raw$average_in_blink))
sum(is.na(raw$average_in_saccade))
glimpse(raw)
prefix <- raw %>%
filter(block %in% c('instructions','texttime')) %>%
select(average_pupil_size,left_pupil_size,left_gaze_x,right_pupil_size,right_gaze_x,trials_this_n,block) %>%
mutate(trials_this_n = ifelse(block == 'instructions',0,trials_this_n + 1)) %>%
filter(trials_this_n != max(trials_this_n)) # remove the last prefixation block before the experiment ends
raw %>% filter(is.na(left_gaze_x) | is.na(right_gaze_x))
raw %>% filter(is.na(left_gaze_x) | is.na(right_gaze_x), block != 'instructions')
raw %>% filter(is.na(left_gaze_x) | is.na(right_gaze_x), block != 'instructions') %>% summarize(x = all(is.na(average_gaze_x)))
prefix <- raw %>%
filter(block %in% c('instructions','texttime')) %>%
select(average_pupil_size,left_pupil_size,right_pupil_size,average_gaze_x,trials_this_n,block) %>%
mutate(trials_this_n = ifelse(block == 'instructions',0,trials_this_n + 1)) %>%
filter(trials_this_n != max(trials_this_n)) # remove the last prefixation block before the experiment ends
# grab last prefix_l samples per trial, give mean, median, and sd
prefix.s <- prefix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = prefix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
n = ~sum(!is.na(.)))))
# grab last prefix_l samples per trial, give mean, median, and sd
prefix.s <- prefix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = prefix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
n = ~sum(!is.na(.)))))
View(prefix.s)
# grab last prefix_l samples per trial, give mean, median, and sd
prefix.s <- prefix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = prefix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE))),
n = sum(!is.na(average_pupil_size)))
# grab last prefix_l samples per trial, give mean, median, and sd
prefix.s <- prefix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = prefix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE)),
.names = 'pf_{.fn}_{.col}'),
n = sum(!is.na(average_pupil_size)))
max(raw$trials_this_n)
# grab last prefix_l samples per trial, give mean, median, max, min, and sd
prefix.s <- prefix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = prefix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
sd = ~sd(., na.rm = TRUE)),
.names = 'pf_{.fn}_{.col}'),
n = sum(!is.na(average_pupil_size)))
rm(prefix)
fix <- raw %>%
filter(block == 'fixationtime') %>%
select(timestamp,average_pupil_size,left_pupil_size,right_pupil_size,average_gaze_x,trials_this_n,block)
fix <- raw %>%
filter(block == 'fixationtime') %>%
select(timestamp,average_pupil_size,left_pupil_size,right_pupil_size,average_gaze_x,trials_this_n,block)
# average pupil size across left and right eye within trials to give just an
# average pupil size. grab last prefix_l samples per trial, give mean, median,
# and sd
fix.s <- fix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = fix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
sd = ~sd(., na.rm = TRUE)),
.names = 'fix_{.fn}_{.col}'),
n = sum(!is.na(average_pupil_size)))
fix <- raw %>%
filter(block == 'fixationtime') %>%
select(average_pupil_size,left_pupil_size,right_pupil_size,average_gaze_x,trials_this_n,block)
# grab last prefix_l samples per trial, give mean, median, and sd
fix.s <- fix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = fix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
sd = ~sd(., na.rm = TRUE)),
.names = 'fix_{.fn}_{.col}'),
n = sum(!is.na(average_pupil_size)))
rm(fix)
View(prefix.s)
View(fix.s)
glimpse(fix.s)
fix <- raw %>%
filter(block == 'fixationtime') %>%
select(average_pupil_size,left_pupil_size,right_pupil_size,average_gaze_x,trials_this_n,block)
fix %>% filter(trials_this_n == 16)
# grab last prefix_l samples per trial, give mean, median, and sd
fix.s <- fix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = fix_l) %>%
filter(!is.na(average_gaze_x))
View(fix.s)
# grab last prefix_l samples per trial, give mean, median, and sd
fix.s <- fix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = fix_l)
# grab last prefix_l samples per trial, give mean, median, and sd
fix.s <- fix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = fix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
sd = ~sd(., na.rm = TRUE)),
.names = 'fix_{.fn}_{.col}'),
n = sum(!is.na(average_pupil_size)))
View(fix.s)
rm(fix)
stim <- raw %>%
filter(block == 'stimulustime') %>%
group_by(trials_this_n) %>%
mutate(epoch = cut(timestamp,
seq(min(timestamp),max(timestamp),stim_w),
include.lowest = TRUE,
right = FALSE,
labels = FALSE))
View(stim)
nas <- stim %>%
group_by(trials_this_n) %>%
summarize(num = sum(is.na(epoch)),
max_epoch = max(epoch, na.rm = TRUE)) %>%
mutate(na_rep = ifelse(num > stim_w/2, max_epoch + 1, max_epoch))
View(nas)
# count the number of samples with NA assigned as the epoch value.
nas <- stim %>%
group_by(trials_this_n) %>%
summarize(num_na = sum(is.na(epoch)))
# count the number of samples with NA assigned as the epoch value.
nas <- stim %>%
group_by(trials_this_n) %>%
summarize(num_na = sum(is.na(epoch)),
max_epoch = max(epoch, na.rm = TRUE))
# count the number of samples with NA assigned as the epoch value. then
# determine the number of the last assigned epoch. For the samples with NA
# assigned as the epoch, if the number of those samples is greater than half the
# window size, they will be assigned to a new epoch, otherwise they will be
# grouped with the last epoch of the block
nas <- stim %>%
group_by(trials_this_n) %>%
summarize(num_na = sum(is.na(epoch)),
max_epoch = max(epoch, na.rm = TRUE)) %>%
mutate(na_rep = ifelse(num_na > stim_w/2, max_epoch + 1, max_epoch))
# add the epoch information back to the stimulus set
stim <- left_join(stim, nas, by = "trials_this_n") %>%
mutate(epoch = ifelse(is.na(epoch),na_rep,epoch)) %>%
select(-num_na,-max_epoch,-na_rep) %>%
ungroup()
View(stim)
View(nas)
rm(nas)
View(stim)
stim.s <- stim %>%
filter(!is.na(average_gaze_x)) %>%
group_by(trials_this_n,epoch) %>%
summarize(across(c(stimuli:group,key_resp_rt,key_resp_corr), unique),
across(.cols = contains(c('pupil_size','gaze_x','gaze_y')),
.fns = list(mean = ~mean(.x, na.rm = TRUE),
med = ~median(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE))),
stim_n = n()) %>%
mutate(trials_this_n = as.factor(trials_this_n))
View(stim.s)
stim.s <- stim %>%
filter(!is.na(average_gaze_x)) %>%
group_by(trials_this_n,epoch) %>%
summarize(across(c(stimuli:group,key_resp_rt,key_resp_corr), unique),
across(.cols = contains(c('pupil_size','gaze_x','gaze_y')),
.fns = list(mean = ~mean(.x, na.rm = TRUE),
med = ~median(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE)),
.names = 'stim_{.fn}_{.col}'),
stim_n = n()) %>%
mutate(trials_this_n = as.factor(trials_this_n))
View(stim)
stim.s <- stim %>%
filter(!is.na(average_gaze_x)) %>%
group_by(trials_this_n,epoch) %>%
summarize(across(c(stimuli:group,key_resp_rt,key_resp_corr), unique),
across(.cols = contains(c('pupil_size','gaze_x','gaze_y')),
.fns = list(mean = ~mean(.x, na.rm = TRUE),
med = ~median(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE)),
.names = 'stim_{.fn}_{.col}'),
stim_n = n()) %>%
relocate(correct_ans, .after = key_response_corr) %>%
mutate(trials_this_n = as.factor(trials_this_n))
stim.s <- stim %>%
filter(!is.na(average_gaze_x)) %>%
group_by(trials_this_n,epoch) %>%
summarize(across(c(stimuli:group,key_resp_rt,key_resp_corr), unique),
across(.cols = contains(c('pupil_size','gaze_x','gaze_y')),
.fns = list(mean = ~mean(.x, na.rm = TRUE),
med = ~median(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE)),
.names = 'stim_{.fn}_{.col}'),
stim_n = n()) %>%
relocate(correct_ans, .after = key_resp_corr) %>%
mutate(trials_this_n = as.factor(trials_this_n))
# set time frames as window lengths
file <- 'G:/My Drive/Work/Eyetracking/data/bp_focus/raw_combined.csv'
prefix_l <- 200 # number of samples (ms) in the pre-fixation window
fix_l <- 100 # window size for the fixation time block
stim_w <- 200 #set stimulus block averaging window (i.e. every stim_w samples will be averaged together)
min_pupil_size <- 100 # set the minimum average pupil size to keep for each sample.
fix_norm = TRUE
# read in data
raw <- read_csv(file) %>%
mutate(block = replace_na(block,'instructions'),
trials_this_n = replace_na(trials_this_n,0)) %>%
mutate(across(average_acceleration_x:timestamp, as.numeric), # coerce eyetracking data to numeric.
across(contains(c('in_saccade','in_blink')), as.logical))
prefix <- raw %>%
filter(block %in% c('instructions','texttime')) %>%
select(average_pupil_size,left_pupil_size,right_pupil_size,average_gaze_x,trials_this_n,block) %>%
mutate(trials_this_n = ifelse(block == 'instructions',0,trials_this_n + 1)) %>%
filter(trials_this_n != max(trials_this_n)) # remove the last prefixation block before the experiment ends
# grab last prefix_l samples per trial, give mean, median, max, min, and sd
prefix_s <- prefix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = prefix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
sd = ~sd(., na.rm = TRUE)),
.names = 'pf_{.fn}_{.col}'),
n = sum(!is.na(average_pupil_size)))
rm(prefix)
fix <- raw %>%
filter(block == 'fixationtime') %>%
select(average_pupil_size,left_pupil_size,right_pupil_size,average_gaze_x,trials_this_n,block)
# grab last prefix_l samples per trial, give mean, median, and sd
fix_s <- fix %>%
mutate(trials_this_n = as.factor(trials_this_n)) %>%
group_by(trials_this_n) %>%
slice_tail(n = fix_l) %>%
filter(!is.na(average_gaze_x)) %>%
summarize(across(contains('pupil_size'),
.fns = list(mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
sd = ~sd(., na.rm = TRUE)),
.names = 'fix_{.fn}_{.col}'),
n = sum(!is.na(average_pupil_size)))
rm(fix)
# divide each stimulus block into epochs determined by the window size set at
# the beginning of the script.
stim <- raw %>%
filter(block == 'stimulustime') %>%
group_by(trials_this_n) %>%
mutate(epoch = cut(timestamp,
seq(min(timestamp),max(timestamp),stim_w),
include.lowest = TRUE,
right = FALSE,
labels = FALSE))
# count the number of samples with NA assigned as the epoch value. then
# determine the number of the last assigned epoch. For the samples with NA
# assigned as the epoch, if the number of those samples is greater than half the
# window size, they will be assigned to a new epoch, otherwise they will be
# grouped with the last epoch of the block
nas <- stim %>%
group_by(trials_this_n) %>%
summarize(num_na = sum(is.na(epoch)),
max_epoch = max(epoch, na.rm = TRUE)) %>%
mutate(na_rep = ifelse(num_na > stim_w/2, max_epoch + 1, max_epoch))
# add the NA contingent epoch information back to the stimulus set, and replace
# the NA epoch values with the correct epoch assignment
stim <- left_join(stim, nas, by = "trials_this_n") %>%
mutate(epoch = ifelse(is.na(epoch),na_rep,epoch)) %>%
select(-num_na,-max_epoch,-na_rep) %>%
ungroup()
rm(nas)
stim_s <- stim %>%
filter(!is.na(average_gaze_x)) %>%
group_by(trials_this_n,epoch) %>%
summarize(across(c(stimuli:group,key_resp_rt,key_resp_corr), unique),
across(.cols = contains(c('pupil_size','gaze_x','gaze_y')),
.fns = list(mean = ~mean(.x, na.rm = TRUE),
med = ~median(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE)),
.names = 'stim_{.fn}_{.col}'),
stim_n = n()) %>%
relocate(correct_ans, .after = key_resp_corr) %>%
mutate(trials_this_n = as.factor(trials_this_n))
df <- left_join(stim_s,prefix_s,by = "trials_this_n") %>%
left_join(fix_s, by = "trials_this_n")
View(df)
?file.path
dirname(file)
file.path(dirname(file),'stimulus_averaged_eyetracking_outputs.csv')
View(df)
# normalize the left and right pupil sizes to the prefixation and fixation pupil sizes. Using medians for all here for now
df <- df %>%
mutate(stim_med_average_pupil_norm_fix = stim_med_average_pupil_size/fix_median_average_pupil_size,
stim_med_average_pupil_norm_pf = stim_med_average_pupil_size/pf_median_average_pupil_size,
stim_med_left_pupil_norm_fix = stim_med_left_pupil_size/fix_median_left_pupil_size,
stim_med_left_pupil_norm_pf = stim_med_left_pupil_size/pf_median_left_pupil_size,
stim_med_right_pupil_norm_fix = stim_med_right_pupil_size/fix_median_right_pupil_size,
stim_med_right_pupil_norm_pf = stim_med_right_pupil_size/pf_median_right_pupil_size) %>%
select(-starts_with(c('fix','pf')))
write_csv(df,file.path(dirname(file),'stimulus_averaged_eyetracking_outputs.csv'))
write_csv(fix_s,file.path(dirname(file),'fixation_summary.csv'))
write_csv(prefix_s,file.path(dirname(file),'prefixation_summary.csv'))
outpath <- dirname(file) %>% strrep('raw','preprocessed')
outpath <- dirname(file) %>% strrep(.,'raw','preprocessed')
outpath <- dirname(file) %>% str_replace(.,'raw','preprocessed')
dir.create(outpath, showWarnings = FALSE)
# set time frames as window lengths
file <- 'G:/My Drive/Work/Eyetracking/data/bp_focus/raw/raw_combined.csv'
outpath <- dirname(file) %>% str_replace(.,'raw','preprocessed')
dir.create(outpath, showWarnings = FALSE)
write_csv(df,file.path(outpath,'stimulus_averaged_eyetracking_outputs.csv'))
write_csv(fix_s,file.path(outpath,'fixation_summary.csv'))
write_csv(prefix_s,file.path(outpath,'prefixation_summary.csv'))
# List files to be loaded and the output file
et_file <- 'G:/My Drive/Work/Eyetracking/data/bp_wander/raw/eyetracking_raw.csv'
stim_file <- 'G:/My Drive/Work/Eyetracking/data/bp_wander/raw/stimulus.csv'
out_file <- 'G:/My Drive/Work/Eyetracking/data/bp_wander/raw/raw_combined.csv'
######################## Eyetracking File ##################################
# read in the csv file. columns with '.' (and '[]') as the only unique value
# will be removed, as these are empty columns
et <- read_csv(et_file) %>%
clean_names() %>%
select(where(~ !all(. %in% c('.','[]'))))
# List files to be loaded and the output file
et_file <- 'G:/My Drive/Work/Eyetracking/data/bp_wander/raw/eyetracking_raw.csv'
stim_file <- 'G:/My Drive/Work/Eyetracking/data/bp_wander/raw/stimulus.csv'
out_file <- 'G:/My Drive/Work/Eyetracking/data/bp_wander/raw/raw_combined.csv'
######################## Eyetracking File ##################################
# read in the csv file. columns with '.' (and '[]') as the only unique value
# will be removed, as these are empty columns
et <- read_csv(et_file) %>%
clean_names() %>%
select(where(~ !all(. %in% c('.','[]'))))
# remove some other seemingly unnecessary columns
et <- et %>%
select(-data_file, -eye_tracked, -starts_with('ip'), -sample_index, -sample_message, -trial_index, -trial_label, -trial_start_time)
source("G:/My Drive/Work/Eyetracking/code/match_eyetracking_with_stimulus.R", echo=TRUE)
source("G:/My Drive/Work/Eyetracking/code/eyetracking_preprocessing.R", echo=TRUE)
source("G:/My Drive/Work/Eyetracking/code/match_eyetracking_with_stimulus.R", echo=TRUE)
source("G:/My Drive/Work/Eyetracking/code/match_eyetracking_with_stimulus.R", echo=TRUE)
# set time frames as window lengths
file <- 'G:/My Drive/Work/Eyetracking/data/hf_wander/raw/raw_combined.csv'
problems()
source("G:/My Drive/Work/Eyetracking/code/match_eyetracking_with_stimulus.R", echo=TRUE)
problems()
source("G:/My Drive/Work/Eyetracking/code/eyetracking_preprocessing.R", echo=TRUE)
source("G:/My Drive/Work/Eyetracking/code/match_eyetracking_with_stimulus.R", echo=TRUE)
source("G:/My Drive/Work/Eyetracking/code/eyetracking_preprocessing.R", echo=TRUE)
# set the files to load
raw <- 'G:/My Drive/Work/Eyetracking/data/bp_focus/raw/raw_combined.csv'
preproc <- 'G:/My Drive/Work/Eyetracking/data/bp_focus/preprocessed/stimulus_averaged_eyetracking_outputs.csv'
# set the files to load
raw <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_focus/raw/raw_combined.csv')
preproc <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_focus/preprocessed/stimulus_averaged_eyetracking_outputs.csv')
View(preproc)
source("G:/My Drive/Work/Eyetracking/code/eyetracking_preprocessing.R", echo=TRUE)
source("G:/My Drive/Work/Eyetracking/code/eyetracking_preprocessing.R", echo=TRUE)
source("G:/My Drive/Work/Eyetracking/code/eyetracking_preprocessing.R", echo=TRUE)
source("G:/My Drive/Work/Eyetracking/code/eyetracking_preprocessing.R", echo=TRUE)
# set the files to load
raw <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_focus/raw/raw_combined.csv')
preproc <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_focus/preprocessed/stimulus_averaged_eyetracking_outputs.csv')
View(preproc)
# set the files to load
raw <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_wander/raw/raw_combined.csv')
preproc <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_wander/preprocessed/stimulus_averaged_eyetracking_outputs.csv')
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x))
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
ggplot(aes(x = average_gaze_x, y = average_gaze_y)) +
geom_point()
View(raw)
summary(raw$average_gaze_x)
summary(raw)
# set the files to load
raw <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_wander/raw/raw_combined.csv') %>%
mutate(block = replace_na(block,'instructions'),
trials_this_n = replace_na(trials_this_n,0)) %>%
mutate(across(average_acceleration_x:timestamp, as.numeric), # coerce eyetracking data to numeric.
across(contains(c('in_saccade','in_blink')), as.logical))
summary(raw)
summary(raw$left_gaze_x)
summary(raw$right_gaze_x)
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
ggplot() +
geom_density(aes(x = average_gaze_x), color = 'blue') +
geom_density(aes(x = left_gaze_x), color = 'green') +
geom_density(aes(x = right_gaze_x), color = 'red')
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(less_0 = sum(left_gaze_x < 0))
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(less_0 = sum(left_gaze_x < 0)/n())
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(less_0 = sum(left_gaze_x > 1920)/n())
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(less_0 = sum(left_gaze_y > 1080)/n())
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(less_0 = sum(left_gaze_y < 0)/n())
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(avg_within_x = sum(between(average_gaze_x,0,1024))/n(),
avg_within_y = sum(between(average_gaze_y,0,786))/n())
# set the files to load
raw <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_focus/raw/raw_combined.csv') %>%
mutate(block = replace_na(block,'instructions'),
trials_this_n = replace_na(trials_this_n,0)) %>%
mutate(across(average_acceleration_x:timestamp, as.numeric), # coerce eyetracking data to numeric.
across(contains(c('in_saccade','in_blink')), as.logical))
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(avg_within_x = sum(between(average_gaze_x,0,1024))/n(),
avg_within_y = sum(between(average_gaze_y,0,786))/n())
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
ggplot() +
geom_density(aes(x = average_gaze_x), color = 'blue') +
geom_density(aes(x = left_gaze_x), color = 'green') +
geom_density(aes(x = right_gaze_x), color = 'red')
raw %>%
filter(block != 'instructions', !is.na(average_gaze_y)) %>%
ggplot() +
geom_density(aes(x = average_gaze_x), color = 'blue') +
geom_density(aes(x = left_gaze_x), color = 'green') +
geom_density(aes(x = right_gaze_x), color = 'red')
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
ggplot() +
geom_density(aes(x = average_gaze_y), color = 'blue') +
geom_density(aes(x = left_gaze_y), color = 'green') +
geom_density(aes(x = right_gaze_y), color = 'red')
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(avg_within_x = sum(between(average_gaze_x,0,1920))/n(),
avg_within_y = sum(between(average_gaze_y,0,1080))/n())
# set the files to load
raw <- read_csv('G:/My Drive/Work/Eyetracking/data/bp_wander/raw/raw_combined.csv') %>%
mutate(block = replace_na(block,'instructions'),
trials_this_n = replace_na(trials_this_n,0)) %>%
mutate(across(average_acceleration_x:timestamp, as.numeric), # coerce eyetracking data to numeric.
across(contains(c('in_saccade','in_blink')), as.logical))
raw %>%
filter(block != 'instructions', !is.na(average_gaze_x)) %>%
summarize(avg_within_x = sum(between(average_gaze_x,0,1920))/n(),
avg_within_y = sum(between(average_gaze_y,0,1080))/n())
setwd("~/Tidy Tuesday Projects/Steam Games")
